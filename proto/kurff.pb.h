// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kurff.proto

#ifndef PROTOBUF_kurff_2eproto__INCLUDED
#define PROTOBUF_kurff_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace kurff {
class Annotation;
class AnnotationDefaultTypeInternal;
extern AnnotationDefaultTypeInternal _Annotation_default_instance_;
class AnnotationGroup;
class AnnotationGroupDefaultTypeInternal;
extern AnnotationGroupDefaultTypeInternal _AnnotationGroup_default_instance_;
class ConvParameters;
class ConvParametersDefaultTypeInternal;
extern ConvParametersDefaultTypeInternal _ConvParameters_default_instance_;
class Datum;
class DatumDefaultTypeInternal;
extern DatumDefaultTypeInternal _Datum_default_instance_;
class DeviceOption;
class DeviceOptionDefaultTypeInternal;
extern DeviceOptionDefaultTypeInternal _DeviceOption_default_instance_;
class HOGParameters;
class HOGParametersDefaultTypeInternal;
extern HOGParametersDefaultTypeInternal _HOGParameters_default_instance_;
class ModelDef;
class ModelDefDefaultTypeInternal;
extern ModelDefDefaultTypeInternal _ModelDef_default_instance_;
class NormalizedBBox;
class NormalizedBBoxDefaultTypeInternal;
extern NormalizedBBoxDefaultTypeInternal _NormalizedBBox_default_instance_;
class OperatorDef;
class OperatorDefDefaultTypeInternal;
extern OperatorDefDefaultTypeInternal _OperatorDef_default_instance_;
class Parameters;
class ParametersDefaultTypeInternal;
extern ParametersDefaultTypeInternal _Parameters_default_instance_;
class TensorProto;
class TensorProtoDefaultTypeInternal;
extern TensorProtoDefaultTypeInternal _TensorProto_default_instance_;
}  // namespace kurff

namespace kurff {

namespace protobuf_kurff_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_kurff_2eproto

enum DeviceType {
  CPU = 0,
  CUDA = 1,
  MKLDNN = 2,
  ONLY_FOR_TEST = 20901701
};
bool DeviceType_IsValid(int value);
const DeviceType DeviceType_MIN = CPU;
const DeviceType DeviceType_MAX = ONLY_FOR_TEST;
const int DeviceType_ARRAYSIZE = DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceType_descriptor();
inline const ::std::string& DeviceType_Name(DeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceType_descriptor(), value);
}
inline bool DeviceType_Parse(
    const ::std::string& name, DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceType>(
    DeviceType_descriptor(), name, value);
}
// ===================================================================

class TensorProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.TensorProto) */ {
 public:
  TensorProto();
  virtual ~TensorProto();

  TensorProto(const TensorProto& from);

  inline TensorProto& operator=(const TensorProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TensorProto& default_instance();

  static inline const TensorProto* internal_default_instance() {
    return reinterpret_cast<const TensorProto*>(
               &_TensorProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TensorProto* other);

  // implements Message ----------------------------------------------

  inline TensorProto* New() const PROTOBUF_FINAL { return New(NULL); }

  TensorProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TensorProto& from);
  void MergeFrom(const TensorProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TensorProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // repeated int32 dims = 2;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 2;
  ::google::protobuf::int32 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int32 value);
  void add_dims(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dims();

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:kurff.TensorProto)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dims_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NormalizedBBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.NormalizedBBox) */ {
 public:
  NormalizedBBox();
  virtual ~NormalizedBBox();

  NormalizedBBox(const NormalizedBBox& from);

  inline NormalizedBBox& operator=(const NormalizedBBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalizedBBox& default_instance();

  static inline const NormalizedBBox* internal_default_instance() {
    return reinterpret_cast<const NormalizedBBox*>(
               &_NormalizedBBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NormalizedBBox* other);

  // implements Message ----------------------------------------------

  inline NormalizedBBox* New() const PROTOBUF_FINAL { return New(NULL); }

  NormalizedBBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NormalizedBBox& from);
  void MergeFrom(const NormalizedBBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NormalizedBBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float xmin = 1;
  bool has_xmin() const;
  void clear_xmin();
  static const int kXminFieldNumber = 1;
  float xmin() const;
  void set_xmin(float value);

  // optional float ymin = 2;
  bool has_ymin() const;
  void clear_ymin();
  static const int kYminFieldNumber = 2;
  float ymin() const;
  void set_ymin(float value);

  // optional float xmax = 3;
  bool has_xmax() const;
  void clear_xmax();
  static const int kXmaxFieldNumber = 3;
  float xmax() const;
  void set_xmax(float value);

  // optional float ymax = 4;
  bool has_ymax() const;
  void clear_ymax();
  static const int kYmaxFieldNumber = 4;
  float ymax() const;
  void set_ymax(float value);

  // optional int32 label = 5;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 5;
  ::google::protobuf::int32 label() const;
  void set_label(::google::protobuf::int32 value);

  // optional bool difficult = 6;
  bool has_difficult() const;
  void clear_difficult();
  static const int kDifficultFieldNumber = 6;
  bool difficult() const;
  void set_difficult(bool value);

  // optional float score = 7;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 7;
  float score() const;
  void set_score(float value);

  // optional float size = 8;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  float size() const;
  void set_size(float value);

  // @@protoc_insertion_point(class_scope:kurff.NormalizedBBox)
 private:
  void set_has_xmin();
  void clear_has_xmin();
  void set_has_ymin();
  void clear_has_ymin();
  void set_has_xmax();
  void clear_has_xmax();
  void set_has_ymax();
  void clear_has_ymax();
  void set_has_label();
  void clear_has_label();
  void set_has_difficult();
  void clear_has_difficult();
  void set_has_score();
  void clear_has_score();
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float xmin_;
  float ymin_;
  float xmax_;
  float ymax_;
  ::google::protobuf::int32 label_;
  bool difficult_;
  float score_;
  float size_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Annotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.Annotation) */ {
 public:
  Annotation();
  virtual ~Annotation();

  Annotation(const Annotation& from);

  inline Annotation& operator=(const Annotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Annotation& default_instance();

  static inline const Annotation* internal_default_instance() {
    return reinterpret_cast<const Annotation*>(
               &_Annotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Annotation* other);

  // implements Message ----------------------------------------------

  inline Annotation* New() const PROTOBUF_FINAL { return New(NULL); }

  Annotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Annotation& from);
  void MergeFrom(const Annotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Annotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .kurff.NormalizedBBox bbox = 2;
  bool has_bbox() const;
  void clear_bbox();
  static const int kBboxFieldNumber = 2;
  const ::kurff::NormalizedBBox& bbox() const;
  ::kurff::NormalizedBBox* mutable_bbox();
  ::kurff::NormalizedBBox* release_bbox();
  void set_allocated_bbox(::kurff::NormalizedBBox* bbox);

  // optional int32 instance_id = 1 [default = 0];
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kurff.Annotation)
 private:
  void set_has_instance_id();
  void clear_has_instance_id();
  void set_has_bbox();
  void clear_has_bbox();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::kurff::NormalizedBBox* bbox_;
  ::google::protobuf::int32 instance_id_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnnotationGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.AnnotationGroup) */ {
 public:
  AnnotationGroup();
  virtual ~AnnotationGroup();

  AnnotationGroup(const AnnotationGroup& from);

  inline AnnotationGroup& operator=(const AnnotationGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotationGroup& default_instance();

  static inline const AnnotationGroup* internal_default_instance() {
    return reinterpret_cast<const AnnotationGroup*>(
               &_AnnotationGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AnnotationGroup* other);

  // implements Message ----------------------------------------------

  inline AnnotationGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotationGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotationGroup& from);
  void MergeFrom(const AnnotationGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotationGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .kurff.Annotation annotation = 2;
  int annotation_size() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 2;
  const ::kurff::Annotation& annotation(int index) const;
  ::kurff::Annotation* mutable_annotation(int index);
  ::kurff::Annotation* add_annotation();
  ::google::protobuf::RepeatedPtrField< ::kurff::Annotation >*
      mutable_annotation();
  const ::google::protobuf::RepeatedPtrField< ::kurff::Annotation >&
      annotation() const;

  // optional int32 group_label = 1;
  bool has_group_label() const;
  void clear_group_label();
  static const int kGroupLabelFieldNumber = 1;
  ::google::protobuf::int32 group_label() const;
  void set_group_label(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kurff.AnnotationGroup)
 private:
  void set_has_group_label();
  void clear_has_group_label();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::kurff::Annotation > annotation_;
  ::google::protobuf::int32 group_label_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Datum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.Datum) */ {
 public:
  Datum();
  virtual ~Datum();

  Datum(const Datum& from);

  inline Datum& operator=(const Datum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Datum& default_instance();

  static inline const Datum* internal_default_instance() {
    return reinterpret_cast<const Datum*>(
               &_Datum_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Datum* other);

  // implements Message ----------------------------------------------

  inline Datum* New() const PROTOBUF_FINAL { return New(NULL); }

  Datum* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Datum& from);
  void MergeFrom(const Datum& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Datum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float float_data = 6;
  int float_data_size() const;
  void clear_float_data();
  static const int kFloatDataFieldNumber = 6;
  float float_data(int index) const;
  void set_float_data(int index, float value);
  void add_float_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_data();

  // optional bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 channels = 1;
  bool has_channels() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  ::google::protobuf::int32 channels() const;
  void set_channels(::google::protobuf::int32 value);

  // optional int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 label = 5;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 5;
  ::google::protobuf::int32 label() const;
  void set_label(::google::protobuf::int32 value);

  // optional bool encoded = 7 [default = false];
  bool has_encoded() const;
  void clear_encoded();
  static const int kEncodedFieldNumber = 7;
  bool encoded() const;
  void set_encoded(bool value);

  // @@protoc_insertion_point(class_scope:kurff.Datum)
 private:
  void set_has_channels();
  void clear_has_channels();
  void set_has_height();
  void clear_has_height();
  void set_has_width();
  void clear_has_width();
  void set_has_data();
  void clear_has_data();
  void set_has_label();
  void clear_has_label();
  void set_has_encoded();
  void clear_has_encoded();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > float_data_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 channels_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 label_;
  bool encoded_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HOGParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.HOGParameters) */ {
 public:
  HOGParameters();
  virtual ~HOGParameters();

  HOGParameters(const HOGParameters& from);

  inline HOGParameters& operator=(const HOGParameters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HOGParameters& default_instance();

  static inline const HOGParameters* internal_default_instance() {
    return reinterpret_cast<const HOGParameters*>(
               &_HOGParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(HOGParameters* other);

  // implements Message ----------------------------------------------

  inline HOGParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  HOGParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HOGParameters& from);
  void MergeFrom(const HOGParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HOGParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 sbin = 1 [default = 4];
  bool has_sbin() const;
  void clear_sbin();
  static const int kSbinFieldNumber = 1;
  ::google::protobuf::int32 sbin() const;
  void set_sbin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kurff.HOGParameters)
 private:
  void set_has_sbin();
  void clear_has_sbin();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 sbin_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConvParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.ConvParameters) */ {
 public:
  ConvParameters();
  virtual ~ConvParameters();

  ConvParameters(const ConvParameters& from);

  inline ConvParameters& operator=(const ConvParameters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConvParameters& default_instance();

  static inline const ConvParameters* internal_default_instance() {
    return reinterpret_cast<const ConvParameters*>(
               &_ConvParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ConvParameters* other);

  // implements Message ----------------------------------------------

  inline ConvParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  ConvParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConvParameters& from);
  void MergeFrom(const ConvParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConvParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pad_l = 3;
  bool has_pad_l() const;
  void clear_pad_l();
  static const int kPadLFieldNumber = 3;
  ::google::protobuf::int32 pad_l() const;
  void set_pad_l(::google::protobuf::int32 value);

  // required int32 pad_r = 4;
  bool has_pad_r() const;
  void clear_pad_r();
  static const int kPadRFieldNumber = 4;
  ::google::protobuf::int32 pad_r() const;
  void set_pad_r(::google::protobuf::int32 value);

  // required int32 pad_t = 5;
  bool has_pad_t() const;
  void clear_pad_t();
  static const int kPadTFieldNumber = 5;
  ::google::protobuf::int32 pad_t() const;
  void set_pad_t(::google::protobuf::int32 value);

  // required int32 kernel_h = 6;
  bool has_kernel_h() const;
  void clear_kernel_h();
  static const int kKernelHFieldNumber = 6;
  ::google::protobuf::int32 kernel_h() const;
  void set_kernel_h(::google::protobuf::int32 value);

  // required int32 kernel_w = 7;
  bool has_kernel_w() const;
  void clear_kernel_w();
  static const int kKernelWFieldNumber = 7;
  ::google::protobuf::int32 kernel_w() const;
  void set_kernel_w(::google::protobuf::int32 value);

  // required int32 kernel_d = 8;
  bool has_kernel_d() const;
  void clear_kernel_d();
  static const int kKernelDFieldNumber = 8;
  ::google::protobuf::int32 kernel_d() const;
  void set_kernel_d(::google::protobuf::int32 value);

  // required int32 stride_w = 9;
  bool has_stride_w() const;
  void clear_stride_w();
  static const int kStrideWFieldNumber = 9;
  ::google::protobuf::int32 stride_w() const;
  void set_stride_w(::google::protobuf::int32 value);

  // required int32 stride_h = 10;
  bool has_stride_h() const;
  void clear_stride_h();
  static const int kStrideHFieldNumber = 10;
  ::google::protobuf::int32 stride_h() const;
  void set_stride_h(::google::protobuf::int32 value);

  // required int32 pad_b = 1 [default = 1];
  bool has_pad_b() const;
  void clear_pad_b();
  static const int kPadBFieldNumber = 1;
  ::google::protobuf::int32 pad_b() const;
  void set_pad_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kurff.ConvParameters)
 private:
  void set_has_pad_b();
  void clear_has_pad_b();
  void set_has_pad_l();
  void clear_has_pad_l();
  void set_has_pad_r();
  void clear_has_pad_r();
  void set_has_pad_t();
  void clear_has_pad_t();
  void set_has_kernel_h();
  void clear_has_kernel_h();
  void set_has_kernel_w();
  void clear_has_kernel_w();
  void set_has_kernel_d();
  void clear_has_kernel_d();
  void set_has_stride_w();
  void clear_has_stride_w();
  void set_has_stride_h();
  void clear_has_stride_h();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 pad_l_;
  ::google::protobuf::int32 pad_r_;
  ::google::protobuf::int32 pad_t_;
  ::google::protobuf::int32 kernel_h_;
  ::google::protobuf::int32 kernel_w_;
  ::google::protobuf::int32 kernel_d_;
  ::google::protobuf::int32 stride_w_;
  ::google::protobuf::int32 stride_h_;
  ::google::protobuf::int32 pad_b_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceOption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.DeviceOption) */ {
 public:
  DeviceOption();
  virtual ~DeviceOption();

  DeviceOption(const DeviceOption& from);

  inline DeviceOption& operator=(const DeviceOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceOption& default_instance();

  static inline const DeviceOption* internal_default_instance() {
    return reinterpret_cast<const DeviceOption*>(
               &_DeviceOption_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DeviceOption* other);

  // implements Message ----------------------------------------------

  inline DeviceOption* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceOption* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceOption& from);
  void MergeFrom(const DeviceOption& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceOption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device_type = 1 [default = 0];
  bool has_device_type() const;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 1;
  ::google::protobuf::int32 device_type() const;
  void set_device_type(::google::protobuf::int32 value);

  // optional int32 cuda_gpu_id = 2;
  bool has_cuda_gpu_id() const;
  void clear_cuda_gpu_id();
  static const int kCudaGpuIdFieldNumber = 2;
  ::google::protobuf::int32 cuda_gpu_id() const;
  void set_cuda_gpu_id(::google::protobuf::int32 value);

  // optional uint32 random_seed = 3;
  bool has_random_seed() const;
  void clear_random_seed();
  static const int kRandomSeedFieldNumber = 3;
  ::google::protobuf::uint32 random_seed() const;
  void set_random_seed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:kurff.DeviceOption)
 private:
  void set_has_device_type();
  void clear_has_device_type();
  void set_has_cuda_gpu_id();
  void clear_has_cuda_gpu_id();
  void set_has_random_seed();
  void clear_has_random_seed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 device_type_;
  ::google::protobuf::int32 cuda_gpu_id_;
  ::google::protobuf::uint32 random_seed_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Parameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.Parameters) */ {
 public:
  Parameters();
  virtual ~Parameters();

  Parameters(const Parameters& from);

  inline Parameters& operator=(const Parameters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Parameters& default_instance();

  static inline const Parameters* internal_default_instance() {
    return reinterpret_cast<const Parameters*>(
               &_Parameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Parameters* other);

  // implements Message ----------------------------------------------

  inline Parameters* New() const PROTOBUF_FINAL { return New(NULL); }

  Parameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Parameters& from);
  void MergeFrom(const Parameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Parameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .kurff.HOGParameters hog_parameters = 1;
  bool has_hog_parameters() const;
  void clear_hog_parameters();
  static const int kHogParametersFieldNumber = 1;
  const ::kurff::HOGParameters& hog_parameters() const;
  ::kurff::HOGParameters* mutable_hog_parameters();
  ::kurff::HOGParameters* release_hog_parameters();
  void set_allocated_hog_parameters(::kurff::HOGParameters* hog_parameters);

  // optional .kurff.ConvParameters conv_parameters = 2;
  bool has_conv_parameters() const;
  void clear_conv_parameters();
  static const int kConvParametersFieldNumber = 2;
  const ::kurff::ConvParameters& conv_parameters() const;
  ::kurff::ConvParameters* mutable_conv_parameters();
  ::kurff::ConvParameters* release_conv_parameters();
  void set_allocated_conv_parameters(::kurff::ConvParameters* conv_parameters);

  // @@protoc_insertion_point(class_scope:kurff.Parameters)
 private:
  void set_has_hog_parameters();
  void clear_has_hog_parameters();
  void set_has_conv_parameters();
  void clear_has_conv_parameters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::kurff::HOGParameters* hog_parameters_;
  ::kurff::ConvParameters* conv_parameters_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.ModelDef) */ {
 public:
  ModelDef();
  virtual ~ModelDef();

  ModelDef(const ModelDef& from);

  inline ModelDef& operator=(const ModelDef& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelDef& default_instance();

  static inline const ModelDef* internal_default_instance() {
    return reinterpret_cast<const ModelDef*>(
               &_ModelDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ModelDef* other);

  // implements Message ----------------------------------------------

  inline ModelDef* New() const PROTOBUF_FINAL { return New(NULL); }

  ModelDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModelDef& from);
  void MergeFrom(const ModelDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModelDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kurff.ModelDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OperatorDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kurff.OperatorDef) */ {
 public:
  OperatorDef();
  virtual ~OperatorDef();

  OperatorDef(const OperatorDef& from);

  inline OperatorDef& operator=(const OperatorDef& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorDef& default_instance();

  static inline const OperatorDef* internal_default_instance() {
    return reinterpret_cast<const OperatorDef*>(
               &_OperatorDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(OperatorDef* other);

  // implements Message ----------------------------------------------

  inline OperatorDef* New() const PROTOBUF_FINAL { return New(NULL); }

  OperatorDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperatorDef& from);
  void MergeFrom(const OperatorDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperatorDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kurff.OperatorDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_kurff_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorProto

// repeated float data = 1;
inline int TensorProto::data_size() const {
  return data_.size();
}
inline void TensorProto::clear_data() {
  data_.Clear();
}
inline float TensorProto::data(int index) const {
  // @@protoc_insertion_point(field_get:kurff.TensorProto.data)
  return data_.Get(index);
}
inline void TensorProto::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:kurff.TensorProto.data)
}
inline void TensorProto::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:kurff.TensorProto.data)
}
inline const ::google::protobuf::RepeatedField< float >&
TensorProto::data() const {
  // @@protoc_insertion_point(field_list:kurff.TensorProto.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
TensorProto::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:kurff.TensorProto.data)
  return &data_;
}

// repeated int32 dims = 2;
inline int TensorProto::dims_size() const {
  return dims_.size();
}
inline void TensorProto::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int32 TensorProto::dims(int index) const {
  // @@protoc_insertion_point(field_get:kurff.TensorProto.dims)
  return dims_.Get(index);
}
inline void TensorProto::set_dims(int index, ::google::protobuf::int32 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:kurff.TensorProto.dims)
}
inline void TensorProto::add_dims(::google::protobuf::int32 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:kurff.TensorProto.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorProto::dims() const {
  // @@protoc_insertion_point(field_list:kurff.TensorProto.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorProto::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:kurff.TensorProto.dims)
  return &dims_;
}

// optional string name = 3;
inline bool TensorProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TensorProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TensorProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TensorProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TensorProto::name() const {
  // @@protoc_insertion_point(field_get:kurff.TensorProto.name)
  return name_.GetNoArena();
}
inline void TensorProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kurff.TensorProto.name)
}
#if LANG_CXX11
inline void TensorProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kurff.TensorProto.name)
}
#endif
inline void TensorProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kurff.TensorProto.name)
}
inline void TensorProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kurff.TensorProto.name)
}
inline ::std::string* TensorProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:kurff.TensorProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TensorProto::release_name() {
  // @@protoc_insertion_point(field_release:kurff.TensorProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TensorProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kurff.TensorProto.name)
}

// -------------------------------------------------------------------

// NormalizedBBox

// optional float xmin = 1;
inline bool NormalizedBBox::has_xmin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NormalizedBBox::set_has_xmin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NormalizedBBox::clear_has_xmin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NormalizedBBox::clear_xmin() {
  xmin_ = 0;
  clear_has_xmin();
}
inline float NormalizedBBox::xmin() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.xmin)
  return xmin_;
}
inline void NormalizedBBox::set_xmin(float value) {
  set_has_xmin();
  xmin_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.xmin)
}

// optional float ymin = 2;
inline bool NormalizedBBox::has_ymin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NormalizedBBox::set_has_ymin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NormalizedBBox::clear_has_ymin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NormalizedBBox::clear_ymin() {
  ymin_ = 0;
  clear_has_ymin();
}
inline float NormalizedBBox::ymin() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.ymin)
  return ymin_;
}
inline void NormalizedBBox::set_ymin(float value) {
  set_has_ymin();
  ymin_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.ymin)
}

// optional float xmax = 3;
inline bool NormalizedBBox::has_xmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NormalizedBBox::set_has_xmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NormalizedBBox::clear_has_xmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NormalizedBBox::clear_xmax() {
  xmax_ = 0;
  clear_has_xmax();
}
inline float NormalizedBBox::xmax() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.xmax)
  return xmax_;
}
inline void NormalizedBBox::set_xmax(float value) {
  set_has_xmax();
  xmax_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.xmax)
}

// optional float ymax = 4;
inline bool NormalizedBBox::has_ymax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NormalizedBBox::set_has_ymax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NormalizedBBox::clear_has_ymax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NormalizedBBox::clear_ymax() {
  ymax_ = 0;
  clear_has_ymax();
}
inline float NormalizedBBox::ymax() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.ymax)
  return ymax_;
}
inline void NormalizedBBox::set_ymax(float value) {
  set_has_ymax();
  ymax_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.ymax)
}

// optional int32 label = 5;
inline bool NormalizedBBox::has_label() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NormalizedBBox::set_has_label() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NormalizedBBox::clear_has_label() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NormalizedBBox::clear_label() {
  label_ = 0;
  clear_has_label();
}
inline ::google::protobuf::int32 NormalizedBBox::label() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.label)
  return label_;
}
inline void NormalizedBBox::set_label(::google::protobuf::int32 value) {
  set_has_label();
  label_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.label)
}

// optional bool difficult = 6;
inline bool NormalizedBBox::has_difficult() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NormalizedBBox::set_has_difficult() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NormalizedBBox::clear_has_difficult() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NormalizedBBox::clear_difficult() {
  difficult_ = false;
  clear_has_difficult();
}
inline bool NormalizedBBox::difficult() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.difficult)
  return difficult_;
}
inline void NormalizedBBox::set_difficult(bool value) {
  set_has_difficult();
  difficult_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.difficult)
}

// optional float score = 7;
inline bool NormalizedBBox::has_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NormalizedBBox::set_has_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NormalizedBBox::clear_has_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NormalizedBBox::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline float NormalizedBBox::score() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.score)
  return score_;
}
inline void NormalizedBBox::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.score)
}

// optional float size = 8;
inline bool NormalizedBBox::has_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NormalizedBBox::set_has_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NormalizedBBox::clear_has_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NormalizedBBox::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline float NormalizedBBox::size() const {
  // @@protoc_insertion_point(field_get:kurff.NormalizedBBox.size)
  return size_;
}
inline void NormalizedBBox::set_size(float value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:kurff.NormalizedBBox.size)
}

// -------------------------------------------------------------------

// Annotation

// optional int32 instance_id = 1 [default = 0];
inline bool Annotation::has_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Annotation::set_has_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Annotation::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Annotation::clear_instance_id() {
  instance_id_ = 0;
  clear_has_instance_id();
}
inline ::google::protobuf::int32 Annotation::instance_id() const {
  // @@protoc_insertion_point(field_get:kurff.Annotation.instance_id)
  return instance_id_;
}
inline void Annotation::set_instance_id(::google::protobuf::int32 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:kurff.Annotation.instance_id)
}

// optional .kurff.NormalizedBBox bbox = 2;
inline bool Annotation::has_bbox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Annotation::set_has_bbox() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Annotation::clear_has_bbox() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Annotation::clear_bbox() {
  if (bbox_ != NULL) bbox_->::kurff::NormalizedBBox::Clear();
  clear_has_bbox();
}
inline const ::kurff::NormalizedBBox& Annotation::bbox() const {
  // @@protoc_insertion_point(field_get:kurff.Annotation.bbox)
  return bbox_ != NULL ? *bbox_
                         : *::kurff::NormalizedBBox::internal_default_instance();
}
inline ::kurff::NormalizedBBox* Annotation::mutable_bbox() {
  set_has_bbox();
  if (bbox_ == NULL) {
    bbox_ = new ::kurff::NormalizedBBox;
  }
  // @@protoc_insertion_point(field_mutable:kurff.Annotation.bbox)
  return bbox_;
}
inline ::kurff::NormalizedBBox* Annotation::release_bbox() {
  // @@protoc_insertion_point(field_release:kurff.Annotation.bbox)
  clear_has_bbox();
  ::kurff::NormalizedBBox* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
inline void Annotation::set_allocated_bbox(::kurff::NormalizedBBox* bbox) {
  delete bbox_;
  bbox_ = bbox;
  if (bbox) {
    set_has_bbox();
  } else {
    clear_has_bbox();
  }
  // @@protoc_insertion_point(field_set_allocated:kurff.Annotation.bbox)
}

// -------------------------------------------------------------------

// AnnotationGroup

// optional int32 group_label = 1;
inline bool AnnotationGroup::has_group_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnnotationGroup::set_has_group_label() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnnotationGroup::clear_has_group_label() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnnotationGroup::clear_group_label() {
  group_label_ = 0;
  clear_has_group_label();
}
inline ::google::protobuf::int32 AnnotationGroup::group_label() const {
  // @@protoc_insertion_point(field_get:kurff.AnnotationGroup.group_label)
  return group_label_;
}
inline void AnnotationGroup::set_group_label(::google::protobuf::int32 value) {
  set_has_group_label();
  group_label_ = value;
  // @@protoc_insertion_point(field_set:kurff.AnnotationGroup.group_label)
}

// repeated .kurff.Annotation annotation = 2;
inline int AnnotationGroup::annotation_size() const {
  return annotation_.size();
}
inline void AnnotationGroup::clear_annotation() {
  annotation_.Clear();
}
inline const ::kurff::Annotation& AnnotationGroup::annotation(int index) const {
  // @@protoc_insertion_point(field_get:kurff.AnnotationGroup.annotation)
  return annotation_.Get(index);
}
inline ::kurff::Annotation* AnnotationGroup::mutable_annotation(int index) {
  // @@protoc_insertion_point(field_mutable:kurff.AnnotationGroup.annotation)
  return annotation_.Mutable(index);
}
inline ::kurff::Annotation* AnnotationGroup::add_annotation() {
  // @@protoc_insertion_point(field_add:kurff.AnnotationGroup.annotation)
  return annotation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::kurff::Annotation >*
AnnotationGroup::mutable_annotation() {
  // @@protoc_insertion_point(field_mutable_list:kurff.AnnotationGroup.annotation)
  return &annotation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::kurff::Annotation >&
AnnotationGroup::annotation() const {
  // @@protoc_insertion_point(field_list:kurff.AnnotationGroup.annotation)
  return annotation_;
}

// -------------------------------------------------------------------

// Datum

// optional int32 channels = 1;
inline bool Datum::has_channels() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Datum::set_has_channels() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Datum::clear_has_channels() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Datum::clear_channels() {
  channels_ = 0;
  clear_has_channels();
}
inline ::google::protobuf::int32 Datum::channels() const {
  // @@protoc_insertion_point(field_get:kurff.Datum.channels)
  return channels_;
}
inline void Datum::set_channels(::google::protobuf::int32 value) {
  set_has_channels();
  channels_ = value;
  // @@protoc_insertion_point(field_set:kurff.Datum.channels)
}

// optional int32 height = 2;
inline bool Datum::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Datum::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Datum::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Datum::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Datum::height() const {
  // @@protoc_insertion_point(field_get:kurff.Datum.height)
  return height_;
}
inline void Datum::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:kurff.Datum.height)
}

// optional int32 width = 3;
inline bool Datum::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Datum::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Datum::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Datum::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Datum::width() const {
  // @@protoc_insertion_point(field_get:kurff.Datum.width)
  return width_;
}
inline void Datum::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:kurff.Datum.width)
}

// optional bytes data = 4;
inline bool Datum::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Datum::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Datum::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Datum::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& Datum::data() const {
  // @@protoc_insertion_point(field_get:kurff.Datum.data)
  return data_.GetNoArena();
}
inline void Datum::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kurff.Datum.data)
}
#if LANG_CXX11
inline void Datum::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kurff.Datum.data)
}
#endif
inline void Datum::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kurff.Datum.data)
}
inline void Datum::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kurff.Datum.data)
}
inline ::std::string* Datum::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:kurff.Datum.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Datum::release_data() {
  // @@protoc_insertion_point(field_release:kurff.Datum.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Datum::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:kurff.Datum.data)
}

// optional int32 label = 5;
inline bool Datum::has_label() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Datum::set_has_label() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Datum::clear_has_label() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Datum::clear_label() {
  label_ = 0;
  clear_has_label();
}
inline ::google::protobuf::int32 Datum::label() const {
  // @@protoc_insertion_point(field_get:kurff.Datum.label)
  return label_;
}
inline void Datum::set_label(::google::protobuf::int32 value) {
  set_has_label();
  label_ = value;
  // @@protoc_insertion_point(field_set:kurff.Datum.label)
}

// repeated float float_data = 6;
inline int Datum::float_data_size() const {
  return float_data_.size();
}
inline void Datum::clear_float_data() {
  float_data_.Clear();
}
inline float Datum::float_data(int index) const {
  // @@protoc_insertion_point(field_get:kurff.Datum.float_data)
  return float_data_.Get(index);
}
inline void Datum::set_float_data(int index, float value) {
  float_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:kurff.Datum.float_data)
}
inline void Datum::add_float_data(float value) {
  float_data_.Add(value);
  // @@protoc_insertion_point(field_add:kurff.Datum.float_data)
}
inline const ::google::protobuf::RepeatedField< float >&
Datum::float_data() const {
  // @@protoc_insertion_point(field_list:kurff.Datum.float_data)
  return float_data_;
}
inline ::google::protobuf::RepeatedField< float >*
Datum::mutable_float_data() {
  // @@protoc_insertion_point(field_mutable_list:kurff.Datum.float_data)
  return &float_data_;
}

// optional bool encoded = 7 [default = false];
inline bool Datum::has_encoded() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Datum::set_has_encoded() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Datum::clear_has_encoded() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Datum::clear_encoded() {
  encoded_ = false;
  clear_has_encoded();
}
inline bool Datum::encoded() const {
  // @@protoc_insertion_point(field_get:kurff.Datum.encoded)
  return encoded_;
}
inline void Datum::set_encoded(bool value) {
  set_has_encoded();
  encoded_ = value;
  // @@protoc_insertion_point(field_set:kurff.Datum.encoded)
}

// -------------------------------------------------------------------

// HOGParameters

// required int32 sbin = 1 [default = 4];
inline bool HOGParameters::has_sbin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HOGParameters::set_has_sbin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HOGParameters::clear_has_sbin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HOGParameters::clear_sbin() {
  sbin_ = 4;
  clear_has_sbin();
}
inline ::google::protobuf::int32 HOGParameters::sbin() const {
  // @@protoc_insertion_point(field_get:kurff.HOGParameters.sbin)
  return sbin_;
}
inline void HOGParameters::set_sbin(::google::protobuf::int32 value) {
  set_has_sbin();
  sbin_ = value;
  // @@protoc_insertion_point(field_set:kurff.HOGParameters.sbin)
}

// optional string name = 2;
inline bool HOGParameters::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HOGParameters::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HOGParameters::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HOGParameters::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& HOGParameters::name() const {
  // @@protoc_insertion_point(field_get:kurff.HOGParameters.name)
  return name_.GetNoArena();
}
inline void HOGParameters::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kurff.HOGParameters.name)
}
#if LANG_CXX11
inline void HOGParameters::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kurff.HOGParameters.name)
}
#endif
inline void HOGParameters::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kurff.HOGParameters.name)
}
inline void HOGParameters::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kurff.HOGParameters.name)
}
inline ::std::string* HOGParameters::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:kurff.HOGParameters.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HOGParameters::release_name() {
  // @@protoc_insertion_point(field_release:kurff.HOGParameters.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HOGParameters::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kurff.HOGParameters.name)
}

// -------------------------------------------------------------------

// ConvParameters

// required int32 pad_b = 1 [default = 1];
inline bool ConvParameters::has_pad_b() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConvParameters::set_has_pad_b() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConvParameters::clear_has_pad_b() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConvParameters::clear_pad_b() {
  pad_b_ = 1;
  clear_has_pad_b();
}
inline ::google::protobuf::int32 ConvParameters::pad_b() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.pad_b)
  return pad_b_;
}
inline void ConvParameters::set_pad_b(::google::protobuf::int32 value) {
  set_has_pad_b();
  pad_b_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.pad_b)
}

// required int32 pad_l = 3;
inline bool ConvParameters::has_pad_l() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConvParameters::set_has_pad_l() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConvParameters::clear_has_pad_l() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConvParameters::clear_pad_l() {
  pad_l_ = 0;
  clear_has_pad_l();
}
inline ::google::protobuf::int32 ConvParameters::pad_l() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.pad_l)
  return pad_l_;
}
inline void ConvParameters::set_pad_l(::google::protobuf::int32 value) {
  set_has_pad_l();
  pad_l_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.pad_l)
}

// required int32 pad_r = 4;
inline bool ConvParameters::has_pad_r() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConvParameters::set_has_pad_r() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConvParameters::clear_has_pad_r() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConvParameters::clear_pad_r() {
  pad_r_ = 0;
  clear_has_pad_r();
}
inline ::google::protobuf::int32 ConvParameters::pad_r() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.pad_r)
  return pad_r_;
}
inline void ConvParameters::set_pad_r(::google::protobuf::int32 value) {
  set_has_pad_r();
  pad_r_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.pad_r)
}

// required int32 pad_t = 5;
inline bool ConvParameters::has_pad_t() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConvParameters::set_has_pad_t() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConvParameters::clear_has_pad_t() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConvParameters::clear_pad_t() {
  pad_t_ = 0;
  clear_has_pad_t();
}
inline ::google::protobuf::int32 ConvParameters::pad_t() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.pad_t)
  return pad_t_;
}
inline void ConvParameters::set_pad_t(::google::protobuf::int32 value) {
  set_has_pad_t();
  pad_t_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.pad_t)
}

// required int32 kernel_h = 6;
inline bool ConvParameters::has_kernel_h() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConvParameters::set_has_kernel_h() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConvParameters::clear_has_kernel_h() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConvParameters::clear_kernel_h() {
  kernel_h_ = 0;
  clear_has_kernel_h();
}
inline ::google::protobuf::int32 ConvParameters::kernel_h() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.kernel_h)
  return kernel_h_;
}
inline void ConvParameters::set_kernel_h(::google::protobuf::int32 value) {
  set_has_kernel_h();
  kernel_h_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.kernel_h)
}

// required int32 kernel_w = 7;
inline bool ConvParameters::has_kernel_w() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConvParameters::set_has_kernel_w() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConvParameters::clear_has_kernel_w() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConvParameters::clear_kernel_w() {
  kernel_w_ = 0;
  clear_has_kernel_w();
}
inline ::google::protobuf::int32 ConvParameters::kernel_w() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.kernel_w)
  return kernel_w_;
}
inline void ConvParameters::set_kernel_w(::google::protobuf::int32 value) {
  set_has_kernel_w();
  kernel_w_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.kernel_w)
}

// required int32 kernel_d = 8;
inline bool ConvParameters::has_kernel_d() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConvParameters::set_has_kernel_d() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConvParameters::clear_has_kernel_d() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConvParameters::clear_kernel_d() {
  kernel_d_ = 0;
  clear_has_kernel_d();
}
inline ::google::protobuf::int32 ConvParameters::kernel_d() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.kernel_d)
  return kernel_d_;
}
inline void ConvParameters::set_kernel_d(::google::protobuf::int32 value) {
  set_has_kernel_d();
  kernel_d_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.kernel_d)
}

// required int32 stride_w = 9;
inline bool ConvParameters::has_stride_w() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConvParameters::set_has_stride_w() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConvParameters::clear_has_stride_w() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConvParameters::clear_stride_w() {
  stride_w_ = 0;
  clear_has_stride_w();
}
inline ::google::protobuf::int32 ConvParameters::stride_w() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.stride_w)
  return stride_w_;
}
inline void ConvParameters::set_stride_w(::google::protobuf::int32 value) {
  set_has_stride_w();
  stride_w_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.stride_w)
}

// required int32 stride_h = 10;
inline bool ConvParameters::has_stride_h() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConvParameters::set_has_stride_h() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConvParameters::clear_has_stride_h() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConvParameters::clear_stride_h() {
  stride_h_ = 0;
  clear_has_stride_h();
}
inline ::google::protobuf::int32 ConvParameters::stride_h() const {
  // @@protoc_insertion_point(field_get:kurff.ConvParameters.stride_h)
  return stride_h_;
}
inline void ConvParameters::set_stride_h(::google::protobuf::int32 value) {
  set_has_stride_h();
  stride_h_ = value;
  // @@protoc_insertion_point(field_set:kurff.ConvParameters.stride_h)
}

// -------------------------------------------------------------------

// DeviceOption

// optional int32 device_type = 1 [default = 0];
inline bool DeviceOption::has_device_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceOption::set_has_device_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceOption::clear_has_device_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceOption::clear_device_type() {
  device_type_ = 0;
  clear_has_device_type();
}
inline ::google::protobuf::int32 DeviceOption::device_type() const {
  // @@protoc_insertion_point(field_get:kurff.DeviceOption.device_type)
  return device_type_;
}
inline void DeviceOption::set_device_type(::google::protobuf::int32 value) {
  set_has_device_type();
  device_type_ = value;
  // @@protoc_insertion_point(field_set:kurff.DeviceOption.device_type)
}

// optional int32 cuda_gpu_id = 2;
inline bool DeviceOption::has_cuda_gpu_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceOption::set_has_cuda_gpu_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceOption::clear_has_cuda_gpu_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceOption::clear_cuda_gpu_id() {
  cuda_gpu_id_ = 0;
  clear_has_cuda_gpu_id();
}
inline ::google::protobuf::int32 DeviceOption::cuda_gpu_id() const {
  // @@protoc_insertion_point(field_get:kurff.DeviceOption.cuda_gpu_id)
  return cuda_gpu_id_;
}
inline void DeviceOption::set_cuda_gpu_id(::google::protobuf::int32 value) {
  set_has_cuda_gpu_id();
  cuda_gpu_id_ = value;
  // @@protoc_insertion_point(field_set:kurff.DeviceOption.cuda_gpu_id)
}

// optional uint32 random_seed = 3;
inline bool DeviceOption::has_random_seed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceOption::set_has_random_seed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceOption::clear_has_random_seed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceOption::clear_random_seed() {
  random_seed_ = 0u;
  clear_has_random_seed();
}
inline ::google::protobuf::uint32 DeviceOption::random_seed() const {
  // @@protoc_insertion_point(field_get:kurff.DeviceOption.random_seed)
  return random_seed_;
}
inline void DeviceOption::set_random_seed(::google::protobuf::uint32 value) {
  set_has_random_seed();
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:kurff.DeviceOption.random_seed)
}

// -------------------------------------------------------------------

// Parameters

// optional .kurff.HOGParameters hog_parameters = 1;
inline bool Parameters::has_hog_parameters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Parameters::set_has_hog_parameters() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Parameters::clear_has_hog_parameters() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Parameters::clear_hog_parameters() {
  if (hog_parameters_ != NULL) hog_parameters_->::kurff::HOGParameters::Clear();
  clear_has_hog_parameters();
}
inline const ::kurff::HOGParameters& Parameters::hog_parameters() const {
  // @@protoc_insertion_point(field_get:kurff.Parameters.hog_parameters)
  return hog_parameters_ != NULL ? *hog_parameters_
                         : *::kurff::HOGParameters::internal_default_instance();
}
inline ::kurff::HOGParameters* Parameters::mutable_hog_parameters() {
  set_has_hog_parameters();
  if (hog_parameters_ == NULL) {
    hog_parameters_ = new ::kurff::HOGParameters;
  }
  // @@protoc_insertion_point(field_mutable:kurff.Parameters.hog_parameters)
  return hog_parameters_;
}
inline ::kurff::HOGParameters* Parameters::release_hog_parameters() {
  // @@protoc_insertion_point(field_release:kurff.Parameters.hog_parameters)
  clear_has_hog_parameters();
  ::kurff::HOGParameters* temp = hog_parameters_;
  hog_parameters_ = NULL;
  return temp;
}
inline void Parameters::set_allocated_hog_parameters(::kurff::HOGParameters* hog_parameters) {
  delete hog_parameters_;
  hog_parameters_ = hog_parameters;
  if (hog_parameters) {
    set_has_hog_parameters();
  } else {
    clear_has_hog_parameters();
  }
  // @@protoc_insertion_point(field_set_allocated:kurff.Parameters.hog_parameters)
}

// optional .kurff.ConvParameters conv_parameters = 2;
inline bool Parameters::has_conv_parameters() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Parameters::set_has_conv_parameters() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Parameters::clear_has_conv_parameters() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Parameters::clear_conv_parameters() {
  if (conv_parameters_ != NULL) conv_parameters_->::kurff::ConvParameters::Clear();
  clear_has_conv_parameters();
}
inline const ::kurff::ConvParameters& Parameters::conv_parameters() const {
  // @@protoc_insertion_point(field_get:kurff.Parameters.conv_parameters)
  return conv_parameters_ != NULL ? *conv_parameters_
                         : *::kurff::ConvParameters::internal_default_instance();
}
inline ::kurff::ConvParameters* Parameters::mutable_conv_parameters() {
  set_has_conv_parameters();
  if (conv_parameters_ == NULL) {
    conv_parameters_ = new ::kurff::ConvParameters;
  }
  // @@protoc_insertion_point(field_mutable:kurff.Parameters.conv_parameters)
  return conv_parameters_;
}
inline ::kurff::ConvParameters* Parameters::release_conv_parameters() {
  // @@protoc_insertion_point(field_release:kurff.Parameters.conv_parameters)
  clear_has_conv_parameters();
  ::kurff::ConvParameters* temp = conv_parameters_;
  conv_parameters_ = NULL;
  return temp;
}
inline void Parameters::set_allocated_conv_parameters(::kurff::ConvParameters* conv_parameters) {
  delete conv_parameters_;
  conv_parameters_ = conv_parameters;
  if (conv_parameters) {
    set_has_conv_parameters();
  } else {
    clear_has_conv_parameters();
  }
  // @@protoc_insertion_point(field_set_allocated:kurff.Parameters.conv_parameters)
}

// -------------------------------------------------------------------

// ModelDef

// -------------------------------------------------------------------

// OperatorDef

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace kurff

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::kurff::DeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kurff::DeviceType>() {
  return ::kurff::DeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_kurff_2eproto__INCLUDED
